
/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Reset BGRT table Displayed status field to false.\nThis works around firmware that provide a BGRT table but fail to handle screen updates afterwards."; ObjectID = "0zY-cF-e9r"; */
"0zY-cF-e9r.ibShadowedToolTip" = "無法在有 BGRT 表的系统上顯示 OEM Windows 標誌的硬體需要開啟。";

/* Class = "NSTableView"; ibShadowedToolTip = "1. Base\nType: plist string\nFailsafe: Empty (Ignored)\nDescription: Selects ACPI path base for patch lookup (or immediate replacement) by obtaining the offset to the provided path.\n\nOnly fully-qualified absolute paths are supported (e.g. \\_SB_.PCI0.GFX0). Currently supported object types are: Device, Field, Method.\n\nNote: Use with care, not all OEM tables can be parsed. Use ACPIe utility to debug. ACPIe compiled with DEBUG=1 make command produces helpful ACPI lookup tracing. \n\n2. BaseSkip\nType: plist integer\nFailsafe: 0 (Do not skip any occurrences)\nDescription: Number of found Base occurrences to skip before finds and replacements are applied.\n\n3. Comment\nType: plist string\nFailsafe: Empty\nDescription: Arbitrary ASCII string used to provide human readable reference for the entry. Whether this value is used is implementation defined.\n\n4. Count\nType: plist integer\nFailsafe: 0 (Apply patch to all occurrences found)\nDescription: Number of occurrences to patch.\n\n5. Enabled\nType: plist boolean\nDefauFailsafe: false\nDescription: Set to true to apply this ACPI patch.\n\n6. Find\nType: plist data\nFailsafe: Empty\nDescription: Data to find. Must be equal to Replace in size if set.\n\nNote: Can be empty, when Base is specified, immediate replacement after Base lookup happens in this case.\n\n7. Limit\nType: plist integer\nFailsafe: 0 (Search entire ACPI table)\nDescription: Maximum number of bytes to search for.\n\n8. Mask\nType: plist data\nDefauFailsafe: Empty (Ignored)\nDescription: Data bitwise mask used during find comparison. Allows fuzzy search by ignoring not masked (set to zero) bits. Must be equal to Replace in size if set.\n\n9. OemTableId\nType: plist data, 8 bytes\nFailsafe: All zero (Match any table OEM ID)\nDescription: Match table OEM ID equal to this value.\n\n10. Replace\nType: plist data\nFailsafe: Empty\nDescription: Replacement data of one or more bytes.\n\n11. ReplaceMask\nType: plist data\nFailsafe: Empty (Ignored)\nDescription: Data bitwise mask used during replacement. Allows fuzzy replacement by updating masked (set to non-zero) bits. Must be equal to Replace in size if set.\n\n12. Skip\nType: plist integer\nFailsafe: 0 (Do not skip any occurrences)\nDescription: Number of found occurrences to skip before replacements are applied.\n\n13. TableLength\nType: plist integer\nFailsafe: 0 (Match any table size)\nDescription: Match table size equal to this value.\n\n14. TableSignature\nType: plist data, 4 bytes (Match any table signature)\nFailsafe: All zero\nDescription: Match table signature equal to this value."; ObjectID = "2tM-Ig-MFJ"; */
"2tM-Ig-MFJ.ibShadowedToolTip" = "這裡我們需要填寫一下ACPI的更名和修復文件。\n在10.15中，一些資料指出我們需要把EC控制器(EC0)重新命名為EC來確保能進入10.15系统(當然也可以用EC仿冒修補文件)\n華擎、華碩、微星主機板可能會遇到RTC時鐘問題而無法進入系统，這同樣需要加入修補文件来修復\n具體修補文件包可以查看宪武大神做的OC-Little修補文件包https://github.com/daliansky/OC-little\n\n1. Base\n通過取得到所提供路徑的偏移量来選擇ACPI路徑以進行修補文件尋找（或立即替換）.\n\n僅支持完全限定的對路徑（例如\\_SB_.PCI0.GFX0）.當前支援的對象類型是: Device, Field, Method.\n\n注意：請謹慎使用，並非所有OEM表都可以被解析.使用ACPIe實用程式進行Debug  使用DEBUG=1 make命令編譯的ACPIe會產生有用的ACPI尋找跟蹤. \n\n2. BaseSkip\n 設定為0:(不要跳過任何事件)\n在應用程式發現和替換之前要跳過的已發現基本事件的數量.\n\n3. Comment\n任意ASCII字符串，用於為項目提供可讀的参考. 是否使用此值由實現定義.\n\n4. Count\n設置為0 (將修補應用程式於發現的所有事件)\n要修補的出现次數。\n\n5. Enabled\n設定為true以套用此ACPI修補文件.\n\n6. Find\n數據尋找。如果設定，則必須等於替換大小.\n\n注意：如果指定了Base，則可以為空, 在這種情况下，發生基本查詢後立即替換.\n\n7. Limit\n設定為0 (搜尋整個ACPI表)\n搜尋的最大字串數.\n\n8. Mask\n設定為空 (被忽略)\n尋找比較期間使用的數據按位掩碼。 通過忽略未屏蔽（設定為零）位来進行模糊搜尋. 如果設定，則必須等於替換大小.\n\n9. OemTableId\n全為零 (匹配任何表的OEM ID)\n匹配表OEM ID等於此值.\n\n10. Replace\n一個或多個字串的替換數據.\n\n11. ReplaceMask\n替換期間使用的數據按位掩碼. 通過更新屏蔽（設定為非零）位来允許模糊替換.如果設定，則必須等於體換大小.\n\n12. Skip\n設定為0 (不要跳過任何事件)\n應用程式替換之前要跳過的發現事件數.\n\n13. TableLength\n設定為0 (匹配任何表大小)\n匹配表大小等於此值.\n\n14. TableSignature\n(匹配任何表簽名)\n匹配表簽名等於該值";

/* Class = "NSTableColumn"; headerCell.title = "Mask"; ObjectID = "4j9-uJ-Gbu"; */
"4j9-uJ-Gbu.headerCell.title" = "Mask";

/* Class = "NSButtonCell"; title = "NormalizeHeaders"; ObjectID = "6NS-cZ-NZu"; */
"6NS-cZ-NZu.title" = "NormalizeHeaders";

/* Class = "NSTextFieldCell"; title = "Loading Resources"; ObjectID = "7g0-XW-xjy"; */
"7g0-XW-xjy.title" = "正在載入線上資源文件";

/* Class = "NSTableView"; ibShadowedToolTip = "1. All\nType: plist boolean\nFailsafe: false (Only delete the first matched table)\nDescription: Set to true to delete all ACPI tables matching the condition.\n2. Comment\nType: plist string\nFailsafe: Empty\nDescription: Arbitrary ASCII string used to provide human readable reference for the entry. Whether this value is used is implementation defined.\n3. Enabled\nType: plist boolean\nFailsafe: false\nDescription: Set to true to remove this ACPI table.\n4. OemTableId\nType: plist data, 8 bytes\nFailsafe: All zero (Match any table OEM ID)\nDescription: Match table OEM ID equal to this value.\n5. TableLength\nType: plist integer\nFailsafe: 0 (Match any table size)\nDescription: Match table size to be equal to this value unless 0.\n6. TableSignature\nType: plist data, 4 bytes\nFailsafe: All zero (Match any table signature)\nDescription: Match table signature equal to this value.\n\nNote: Do not use table signatures when the sequence must be replaced in multiple places. This is particularly relevant when performing different types of renames."; ObjectID = "8sm-zn-vNl"; */
"8sm-zn-vNl.ibShadowedToolTip" = "停用某個 ACPI 表, 比如常用於停用 DAMR 來關閉 VT-d。";

/* Class = "NSTableView"; ibShadowedToolTip = "1. Comment\nType: plist string\nFailsafe: Empty\nDescription: Arbitrary ASCII string used to provide human readable reference for the entry. Whether this value is used is implementation defined.\n\n2. Enabled\nType: plist boolean\nFailsafe: false\nDescription: Set to true to add this ACPI table.\n\n3. Path\nType: plist string\nFailsafe: Empty\nDescription: File paths meant to be loaded as ACPI tables. Example values include DSDT.aml, SubDir/SSDT-8.aml, SSDT-USBX.aml, etc.\n\nACPI table load order follows the item order in the array. All ACPI tables load from OC/ACPI/Custom directory.\n\nNote: All tables apart from tables with a DSDT table identifier (determined by parsing data not by filename) insert new tables into the ACPI stack. DSDT tables perform a replacement of DSDT table instead."; ObjectID = "9ZU-zR-Tmy"; */
"9ZU-zR-Tmy.ibShadowedToolTip" = "這部分主要填寫我們使用的ACPI修補文件，以及DSDT文件，如果没有請把0-8的SSDT全部删除。如果你有修改的SSDT或者DSDT文件，請先將文件放入EFI/OC/ACPI下。\nACPI修補文件是黑蘋果的核心，針對OC的ACPI修補文件請參考宪武大神的OC-litte,https://github.com/daliansky/OC-little";

/* Class = "NSTableColumn"; headerCell.title = "Skip"; ObjectID = "A4Q-If-0AG"; */
"A4Q-If-0AG.headerCell.title" = "跳過次數後開始替換";

/* Class = "NSTableColumn"; headerCell.title = "TableLength"; ObjectID = "CVl-gt-v4L"; */
"CVl-gt-v4L.headerCell.title" = "ACPI表長度";

/* Class = "NSTableColumn"; headerCell.title = "Path*"; ObjectID = "CbM-86-go4"; */
"CbM-86-go4.headerCell.title" = "路徑*";

/* Class = "NSBox"; title = "Quirks"; ObjectID = "DxA-Lh-I4Q"; */
"DxA-Lh-I4Q.title" = "Quirks";

/* Class = "NSTableColumn"; headerCell.title = "Enabled"; ObjectID = "FLp-3q-DSv"; */
"FLp-3q-DSv.headerCell.title" = "啟用";

/* Class = "NSButtonCell"; title = "EnableForAll"; ObjectID = "HdU-pu-zKX"; */
"HdU-pu-zKX.title" = "EnableForAll\n針對全部系统";

/* Class = "NSTableColumn"; headerCell.title = "Count"; ObjectID = "Ite-rF-5H2"; */
"Ite-rF-5H2.headerCell.title" = "替換次數";

/* Class = "NSTableColumn"; headerCell.title = "ReplaceMask"; ObjectID = "JFF-S2-t99"; */
"JFF-S2-t99.headerCell.title" = "替換Mask";

/* Class = "NSTableColumn"; headerCell.title = "Comment"; ObjectID = "JjS-7V-0PV"; */
"JjS-7V-0PV.headerCell.title" = "注釋";

/* Class = "NSTableColumn"; headerCell.title = "Find"; ObjectID = "K4n-vm-jxn"; */
"K4n-vm-jxn.headerCell.title" = "尋找";

/* Class = "NSMenuItem"; title = "List Of Patches"; ObjectID = "Kbb-Cq-tfz"; */
"Kbb-Cq-tfz.title" = "修補文件列表";

/* Class = "NSTableColumn"; headerCell.title = "TableLength"; ObjectID = "MtH-av-7W0"; */
"MtH-av-7W0.headerCell.title" = "ACPI表長度";

/* Class = "NSButtonCell"; title = "Scan/Browse"; ObjectID = "Ndv-7C-25y"; */
"Ndv-7C-25y.title" = "快照增加";

/* Class = "NSTableColumn"; headerCell.title = "Replace"; ObjectID = "NtB-gi-4nw"; */
"NtB-gi-4nw.headerCell.title" = "替換";

/* Class = "NSTableColumn"; headerCell.title = "OemTableId"; ObjectID = "Nxc-pO-D4k"; */
"Nxc-pO-D4k.headerCell.title" = "OemTableId";

/* Class = "NSButtonCell"; title = "RebaseRegions"; ObjectID = "OG6-fc-Q9m"; */
"OG6-fc-Q9m.title" = "RebaseRegions";

/* Class = "NSButtonCell"; title = "ResetHwSig"; ObjectID = "Z6k-wb-4yC"; */
"Z6k-wb-4yC.title" = "ResetHwSig";

/* Class = "NSTableColumn"; headerCell.title = "Enabled"; ObjectID = "c8a-dM-DNw"; */
"c8a-dM-DNw.headerCell.title" = "啟用";

/* Class = "NSTableColumn"; headerCell.title = "Comment"; ObjectID = "cAx-1U-xJ9"; */
"cAx-1U-xJ9.headerCell.title" = "注釋";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Cleanup ACPI header fields to workaround macOS ACPI implementation flaws that result in boot crashes. Reference: Debugging AppleACPIPlatform on 10.13 by Alex James (also known as theracermaster). The issue was fixed in macOS Mojave (10.14)."; ObjectID = "eza-Xg-dPF"; */
"eza-Xg-dPF.ibShadowedToolTip" = "清理ACPI頭，一些主機板的ACPI表需要打開這個修復啟動。只有 macOS 10.13 需要";

/* Class = "NSButtonCell"; title = "ResetLogoStatus"; ObjectID = "fCv-Py-taQ"; */
"fCv-Py-taQ.title" = "Resetlogostatus";

/* Class = "NSTableColumn"; headerCell.title = "Comment"; ObjectID = "gIS-d5-pG5"; */
"gIS-d5-pG5.headerCell.title" = "注釋";

/* Class = "NSTableColumn"; headerCell.title = "Limit"; ObjectID = "ger-9o-NnS"; */
"ger-9o-NnS.headerCell.title" = "限制";

/* Class = "NSTableColumn"; headerCell.title = "Base"; ObjectID = "h4B-GA-PeX"; */
"h4B-GA-PeX.headerCell.title" = "Base";

/* Class = "NSTableColumn"; headerCell.title = "BaseSkip"; ObjectID = "hIr-Vr-rVp"; */
"hIr-Vr-rVp.headerCell.title" = "BaseSkip";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Attempt to heuristically relocate ACPI memory regions. Not recommended.\n\nACPI tables are often generated dynamically by the underlying firmware implementation. Among the position- independent code, ACPI tables may contain the physical addresses of MMIO areas used for device configuration, typically grouped by region (e.g. OperationRegion). Changing firmware settings or hardware configuration, upgrading or patching the firmware inevitably leads to changes in dynamically generated ACPI code, which sometimes results in the shift of the addresses in the aforementioned OperationRegion constructions.\n\nFor this reason, the application of modifications to ACPI tables is extremely risky. The best approach is to make as few changes as possible to ACPI tables and to avoid replacing any tables, particularly DSDT tables. When this cannot be avoided, ensure that any custom DSDT tables are based on the most recent DSDT tables or attempt to remove reads and writes for the affected areas.\n\nWhen nothing else helps, this option could be tried to avoid stalls at PCI Configuration Begin phase of macOS booting by attempting to fix the ACPI addresses. It is not a magic bullet however, and only works with the most typical cases. Do not use unless absolutely required as it can have the opposite effect on certain platforms and result in boot failures."; ObjectID = "iWF-dk-0VK"; */
"iWF-dk-0VK.ibShadowedToolTip" = "換硬體、升级BIOS等對硬體的操作會對ACPI表產生影響，一般不需要打開，使用自定義 DSDT 則必須開啟";

/* Class = "NSTableColumn"; headerCell.title = "All"; ObjectID = "iwn-0u-n3y"; */
"iwn-0u-n3y.headerCell.title" = "全部";

/* Class = "NSTabViewItem"; label = "Patch"; ObjectID = "jB3-Fa-Mq9"; */
"jB3-Fa-Mq9.label" = "修補文件";

/* Class = "NSButtonCell"; title = "Download/Update Acpi"; ObjectID = "l2s-yf-wZB"; */
"l2s-yf-wZB.title" = "下載/更新 ACPI文件";

/* Class = "NSButtonCell"; title = "FadtEnableReset"; ObjectID = "l7b-Bk-2B3"; */
"l7b-Bk-2B3.title" = "FadtEnableReset";

/* Class = "NSTableColumn"; headerCell.title = "TableSignature*"; ObjectID = "mHJ-L1-J8M"; */
"mHJ-L1-J8M.headerCell.title" = "ACPI表名 *";

/* Class = "NSTableColumn"; headerCell.title = "OemTableId"; ObjectID = "qk5-w1-h2Q"; */
"qk5-w1-h2Q.headerCell.title" = "OemTableId";

/* Class = "NSTabViewItem"; label = "Delete"; ObjectID = "swX-ck-WbC"; */
"swX-ck-WbC.label" = "删除";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Reset FACS table HardwareSignature value to 0.\nThis works around firmware that fail to maintain hardware signature across the reboots and cause issues with waking from hibernation."; ObjectID = "u3f-B9-p1e"; */
"u3f-B9-p1e.ibShadowedToolTip" = "存在重新啟動後因無法維持硬體簽名而導致從休眠中喚醒的問題的硬體需要開啟。一般選擇NO\n注意：此選項將來可能會被删除.";

/* Class = "NSTableColumn"; headerCell.title = "TableSignature*"; ObjectID = "wld-sU-lGp"; */
"wld-sU-lGp.headerCell.title" = "ACPI表名 *";

/* Class = "NSButton"; ibShadowedToolTip = "Type: plist boolean\nFailsafe: false\nDescription: Provide reset register and flag in FADT table to enable reboot and shutdown.\n\nMainly required on legacy hardware and a few newer laptops. Can also fix power-button shortcuts. Not recommended unless required."; ObjectID = "xYB-OX-ce7"; */
"xYB-OX-ce7.ibShadowedToolTip" = "一些舊的主機板需要對FADT進行標記來開啟電腦的開機和關機功能，這裡我們不建議開啟它";

/* Class = "NSTabViewItem"; label = "Add"; ObjectID = "y3O-8J-sex"; */
"y3O-8J-sex.label" = "增加";

/* Class = "NSTableColumn"; headerCell.title = "Enabled"; ObjectID = "z8k-hB-WoQ"; */
"z8k-hB-WoQ.headerCell.title" = "啟用";
